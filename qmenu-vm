#!/bin/sh

dmenu() {

command dmenu -f -nb "$theme_0" -nf "$theme_1" -sb "$qube_label" -sf "$theme_0" "$@"
}

fmenu_dom0() (

chosefrom=0

while [ -n "$chosefrom" ]; do

	chosefrom=$(printf "New qube\nGlobal preferences\nLogs\nProperty Manager" |\
		dmenu -l 4 -i -p "dom0:" | cut -f1 -d\ )

	case $chosefrom in

		New) . $qfd/fqvm_create;;

		Global) . $qfd/fqubes_prefs;;

		Logs) fq_logs 2>/dev/null|| . $qfd/fq_logs;;

		Property) . $qfd/fq_pm;;

		*)
	esac
done
)

fmenu_domu() {

# Change label colors according to user input.
qube_label=$(echo "$@" | tr ' ' '\n' |\
	grep "\--$(qvm-prefs "$qube" label)" | cut -d= -f2)

[ -z "$qube_label" ] && qube_label=$theme_1

chosefrom=0

while [ -n "$chosefrom" ]; do

	chosefrom=$(printf "Applications\nAudio input devices\nBlock devices\nBoot\nBootfrom\nClone\nCommand\nDisk\nFirewall\nKeyboard\nKill\nLogs\nPause\nPCI devices\nPreferences\nReboot\nRemove\nServices\nShutdown\nTags\nUnpause\nUSB devices" |\
		dmenu -l 22 -i -p "$qube:" | cut -f1 -d\ )

	case $chosefrom in

		Applications) fqvm_appmenus 2>/dev/null|| . $qfd/fqvm_appmenus;;

		Audio|Block|USB) fqvm_device 2>/dev/null|| . $qfd/fqvm_device;;

		Boot) qvm-start --skip-if-running "$qube"&;;

		Bootfrom) qubes-vm-boot-from-device "$qube";;

		Clone) fqvm_clone 2>/dev/null|| . $qfd/fqvm_clone;;

		Command) fqvm_run 2>/dev/null|| . $qfd/fqvm_run;;

		Disk) fqvm_disk 2>/dev/null|| . $qfd/fqvm_volume;;

		Firewall) fqvm_firewall 2>/dev/null|| . $qfd/fqvm_firewall;;

		Keyboard) fq_keyboard 2>/dev/null|| . $qfd/fq_keyboard;;

		Kill) nyprompt "Kill $qube?" && (qvm-kill "$qube"&);;

		Logs) fq_logs 2>/dev/null|| . $qfd/fq_logs;;

		Pause) nyprompt "Pause $qube?" && (qvm-pause "$qube"&);;

		PCI) fqvm_pci 2>/dev/null|| . $qfd/fqvm_pci;;

		Preferences) fqvm_prefs 2>/dev/null|| . $qfd/fqvm_prefs;;

		Reboot)

			nyprompt "Reboot $qube?" &&

				qvm-check -q --running "$qube" &&

					(qvm-shutdown --wait "$qube" && qvm-start "$qube"&);;

		Remove) fqvm_remove 2>/dev/null|| . $qfd/fqvm_remove;;

		Services) fqvm_service 2>/dev/null|| . $qfd/fqvm_service;;

		Shutdown) nyprompt "Shutdown $qube?" && (qvm-shutdown "$qube"&);;

		Tags) fqvm_tags 2>/dev/null|| . $qfd/fqvm_tags;;

		Unpause) qvm-unpause "$qube"&;;

		*)
	esac
done
}

get_list() {

case $1 in

	mgmt_disptemp) flags='|a.....D.$';;

	netvm) flags='|...N....$';;

	template) flags='|t.......$'
esac

list=$(qvm-ls --raw-data -O name,flags | grep "$flags" | cut -d '|' -f1)
}

nyprompt() (

[ "$(printf "No\nYes" | dmenu -i -p "$1")" = "Yes" ]
)


if [ "$2" = "--light-theme" ]; then

	theme_0='#ffffff'
	theme_1='#000000'
else

	theme_0='#000000'
	theme_1='#ffffff'
fi

qube_label=$theme_1

qfd='/lib/qmenu_vm'

case $1 in

	--focused)

		qube=$(xprop -id "$(xdotool getwindowfocus)" _QUBES_VMNAME | cut -d\" -f2)

		if [ "$qube" = "_QUBES_VMNAME:  not found." ]; then

			qube=dom0

			fmenu_dom0
		else

			fmenu_domu "$@"
		fi

		exit 1;;

	--qube=*)

		qube=$(echo "$1" | cut -d= -f2)

		if [ "$qube" = "dom0" ]; then fmenu_dom0; else fmenu_domu "$@"; fi; exit 1;;

	--all|--halted|--paused|--running|--tags=*);;

	*)

		printf "Usage: $0 [OPTION] (--light-theme) (--{LABEL}=#{HEX TRIPLET})...\nList, manage and configure your qubes via dmenu.\n\n --all\n --focused\n --halted\n --paused\n --running\n --qube=[QUBE]\n --tags=[TAG]\n\n"

		[ "$1" = "--help" ] && exit 0; exit 2
esac

while :; do

	# Load 'qvm-ls' into a variable so that it doesnt
	# need to reload again after every user operation.
	qube_list=$(qvm-ls --no-spinner "$1" -O name,state,label,memory,maxmem,class,template,netvm,default_dispvm,ip,priv-max,priv-curr,priv-used,root-max,root-curr,root-used,kernel |\
		sed 's/ LABEL/ 0\@ /g; s/ red/ 1\@ /g; s/ orange/ 2\@ /g; s/ yellow/ 3\@ /g; s/ green/ 4\@ /g; s/ gray/ 5\@ /g; s/ blue/ 6\@ /g; s/ purple/ 7\@ /g; s/ black/ 8\@ /g' |\
		sort -k3,3 |\
		sed 's/ 0\@ / LABEL/g; s/ 1\@ / red/g; s/ 2\@ / orange/g; s/ 3\@ / yellow/g; s/ 4\@ / green/g; s/ 5\@ / gray/g; s/ 6\@ / blue/g; s/ 7\@ / purple/g; s/ 8\@ / black/g')

	# Get out of the while loop and refresh 'qvm-ls' by loading it again
	# into $qube_list, whenever the user selects the 'qvm-ls' top row.
	while [ "$qubes" != "NAME" ]; do

		qubes=$(echo "$qube_list" | dmenu -l 50 | cut -f1 -d\ )

		[ -z "$qubes" ] && exit 1

		for qube in $qubes; do

			if [ "$qube" = "dom0" ]; then fmenu_dom0

			elif [ "$qube" != "NAME" ]; then fmenu_domu "$@"; qube_label=$theme_1
			fi
		done
	done

	unset qubes
done
