name=$(: | dmenu -p "Enter the name for the new qube:") &&

	label=$(printf 'Red\nOrange\nYellow\nGreen\nGray\nBlue\nPurple\nBlack' |\
		dmenu -i -l 8 -p "Select label for $name:" | awk '{print tolower($0)}')

	if [ -n "$label" ]; then

		QUBEARGS="-l $label"

		class=$(printf 'AppVM\nDispVM\nStandaloneVM\nTemplateVM' |\
			dmenu -i -l 4 -p "Choose a class for $name:") &&

			QUBEARGS="$QUBEARGS -C $class"

		get_list template

		template=$(printf "(Default)\n(None)\n$list" |\
			dmenu -l 50 -p "Select template for $name:")

		if [ "$template" != '(Default)' ] && [ "$template" != '(None)' ]; then

			QUBEARGS="$QUBEARGS -t $template"
		fi

		get_list netvm

		netvm=$(printf "(Default)\n(None)\n$list" |\
			dmenu -l 50 -p "Select netvm for $name:")

		if [ "$netvm" != '(Default)' ]; then

			[ "$netvm" = '(None)' ] && unset netvm

			QUBEARGS="$QUBEARGS --prop netvm=$netvm"
		fi

		provides_network=$(printf 'No\nYes' |\
			dmenu -i -p "Should $name provide networking for other qubes?")

		if [ "$provides_network" = Yes ]; then

			QUBEARGS="$QUBEARGS --prop provides_network=true"
		fi

		option=0

		while [ -n "$option" ]; do

			option=$(printf 'Create the new qube\nAdvanced options' |\
				dmenu -i -l 2 -p "dom0:" | cut -f1 -d\ )

			if [ "$option" = Advanced ]; then

				option_adv=$(printf Pool | dmenu -l 1 -p "$name:")

				if [ "$option_adv" = Pool ]; then

					pool=$(qvm-pool --list | sed '1d' |\
						dmenu -i -l 10 -p "Select a pool for $name:" | cut -f1 -d\ )

					[ -n "$pool" ] && pool="-P $pool"
				fi

			elif [ "$option" = Create ]; then

				qvm-create $QUBEARGS $pool "$name"&

				unset option
			fi
		done
	fi
